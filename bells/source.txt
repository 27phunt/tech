<!DOCTYPE html>
  <html>
  <title>Bell Timer</title>
  <head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bangers&family=Delius&family=Sarpanch:wght@400;500;600;700;800;900&family=Zain:ital,wght@0,200;0,300;0,400;0,700;0,800;0,900;1,300;1,400&display=swap" rel="stylesheet">
  </head>
  <style>
    body {
      text-align: center;
      color: black;
      background-color: white;
    }
    h1.timer {
      font-size: 10vw;
      font-family: "Sarpanch", serif;
      font-weight: 400;
      font-style: normal;
      line-height: 2vw
    }
    h1.label {
      font-size: 3vw;
      font-stretch: normal;
      font-family: "Zain", serif;
      font-weight: 700;
    }
    h1.header {
      font-size: 3vw;
      font-family: "Bangers", serif;
      font-weight: 400;
      font-style: normal;
    }
    h1.footer {
      font-size: 1.5vw;
      font-family: "Delius", serif;
      font-weight: 10000;
      font-style: normal;
    }
    h1.header, h1.label, h1.footer {
      line-height: 10px;
      font-style: normal;
    }
    hr {
      border: solid auto;
    }
    button.hide {
      color: transparent;
      height: 0;
      width: 0;
      font-size: 0;
      background-color: transparent;
      border-color: transparent;
    }
    button.show {
      color: black;
      background-color: transparent;
      border: 1px solid ;
      font-size: 5em;
      border-radius: 20px;
      cursor: pointer;
      font-family: "Bangers", serif;
      font-weight: 400;
      font-style: normal;
      min-width: 15vw;
      min-height: 15vh;
      min-width: 30vw;
      justify-content: center;
    }
    button:hover {
      background-color: lightgray;
    }
  </style>
  <body onload="run()">
    <!-- Div for 'header' and associated elements-->
    <div id="headerDiv">
      <hr>
      <h1 class="header" id="header">Loading ...</h1>
    </div>
    <hr>
    <!-- Text Element for timer/title-->
    <h1 class="timer" id="timer">Loading ...</h1>
    <hr>
    <!-- Text Element for label-->
    <h1 class="label" id="label">Loading ...</h1>
    <hr>
    <!-- Empty Buttons for use with sch and theme menus -->
    <button id="b1" class="hide"></button>
    <button id="b2" class="hide"></button>
    <button id="b3" class="hide"></button>
    <!-- Div for footer and associated elements -->
    <div id="footerDiv">
      <hr>
      <h1 class="footer">Created By Phil H.</h1>
    </div>
    <!-- Audio element for bell sound effect -->
    <audio id="audio" src="audio.mp3"></audio>
  </body>
  <script>
  // Google Sheet IDs for each schedule
  var sheets = {
    'HS': '135452470',
    'MS': '917992683',
    'ES': '581887888'
  }

  // Gets value from 'sch' parameter
  var sch = window.top.location.href.split('sch=')[1].substring(0, 2)

  // Sets the Stop global variable to 'false' on page load
  var Stop = false

  // Programs Buttons when called
  function setButton(x, Text, parameters) {
    document.getElementById('b' + x).setAttribute('class', 'show')
    document.getElementById('b' + x).onclick = 'window.top.location.href = ' + parameters
    document.getElementById('b' + x).addEventListener('click', function() {
      window.top.location.href = window.top.location.href + parameters;
    }, false)
    document.getElementById('b' + x).innerHTML = Text
  }

  // Runs the following on page load
  function run() {
    // Show 'schedule' menu following if 'sch' parameter not defined
    if (sch == undefined) {
      // Set the header
      document.getElementById('header').innerHTML = '<h1 class="header">&nbsp;</h1>'
      // Set Buttons
      setButton(1, 'ES', '?sch=ES')
      setButton(2, 'MS', '?sch=MS')
      setButton(3, 'HS', '?sch=HS')
      // Set the 'timer' and 'label' text
      document.getElementById('timer').innerHTML = 'Bell Timer'
      document.getElementById('label').innerHTML = 'Select a Schedule'
      // Stop 'run()' function
      return
    }
    // Set Header to Schedule Option 
    document.getElementById('header').innerHTML = {'HS': 'High',  'MS': 'Middle', 'ES': 'Elementary'} [sch] + ' School'
    // Open 'theme' menu if a theme has not been selected
    if (!window.top.location.href.includes('darkmode=')) {
      // Set Buttons
      setButton(1, 'Light Mode', '&darkmode=false')
      setButton(2, 'Dark Mode', '&darkmode=true')
      // Set the 'timer' and 'label' text
      document.getElementById('timer').innerHTML = 'Bell Timer'
      document.getElementById('label').innerHTML = 'Select a Theme'
      // Set the global 'Stop' variable to 'true'
      window.Stop = true
      // Stop 'run()' function
      return
    }
    // Change theme to dark if 'darkmode' parameter is 'true'
    if (window.top.location.href.split('?')[1].includes('darkmode=true')) {
      // Change the background color
      document.body.style.backgroundColor = 'black'
      // Change the font color
      document.body.style.color = 'blue'
    }
    // Remove the 'footer' Div
    document.getElementById('footerDiv').remove()
    // Update the timer every second
    setInterval(() => {
      // Set the variable 'distance' to the difference between the current time and the 'Target' global variable
      var distance = Target - new Date().getTime();
      // Format 'distance' to hours, minutes and seconds
      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) + 'h '
      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)) + 'm '
      var seconds = Math.floor((distance % (1000 * 60)) / 1000) + 's '
      // Set the Timer Element
      document.getElementById("timer").innerHTML = hours + minutes + seconds
      // Check if 'distance' is less than 5 and 'audio' is 'true'
      if (distance < 5 && window.top.location.href.includes('audio=true')) {
        // Play bell sound
        document.getElementById('audio').play()
      }
    }, 1000)
  }

  // Update 'Target' global variable every second
  setInterval(() => {
    // Stop here until next loop if global var 'Stop' is 'true'
    if (Stop) {
      return
    }
    // Fetch and import Data from the Google Sheet
    fetch('https://docs.google.com/spreadsheets/d/e/2PACX-1vS8EGwkTMFJvKzMEPVXAo-a_DvNwKw8v5ZCk7VEDCFcEEoZC9Q1FBL5UgXDycYO4LZ_CAogkuPXXo9V/pub?gid=' + sheets[sch] + '&single=true&output=csv').then(r => r.text()).then(t => t.split('\n')).then(t => {
      // Search through the 't' (fetch data split by line) for the next bell
      for (x = 0; x < t.length; x++) {
        // Set 'data' to the current line of 't' split by ','
        var data = t[x].split(',')
        // Gets the value of 'data' in unix time as 'out'
        var out = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), data[0], data[1], data[2]).getTime()
        // Run the following if 'out' is greater than the current unix time
        if (new Date().getTime() < out) {
          // Set the 'label' element to the label value 
          document.getElementById('label').innerHTML = data[3]
          // Set the global variable 'Target' to the unix time value of the next bell
          window.Target = out
          // Stop here until next loop
          return
        }
      }
      // Gets first bell tommorrow if no bells are left today
      var data = t[0].split(',')
      // Set the global variable 'Target' to the unix time value of the next bell
      window.Target = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1, data[0], data[1], data[2]).getTime()
      // Set the 'label' element to the 'label' value
      document.getElementById('label').innerHTML = data[3]
    })
  }, 2000)
  </script>
</html>
